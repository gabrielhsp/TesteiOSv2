//
//  ExtractViewController.swift
//  BankApp
//
//  Created by Gabriel Henrique Santos Pereira on 12/04/19.
//  Copyright (c) 2019 Gabriel Henrique Santos Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ExtractDisplayLogic: class {
    func renderUserAccountData(userData: LoginResponse.UserAccount) -> Void
}

class ExtractViewController: UIViewController, ExtractDisplayLogic {
    @IBOutlet weak var labelUserName: UILabel!
    @IBOutlet weak var labelUserAccountAgency: UILabel!
    @IBOutlet weak var labelUserBalance: UILabel!
    
    var interactor: ExtractBusinessLogic?
    var router: (NSObjectProtocol & ExtractRoutingLogic & ExtractDataPassing)?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = ExtractInteractor()
        let presenter = ExtractPresenter()
        let router = ExtractRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.getUserAccountData()
    }
    
    // MARK: Render user account data inside ExtractViewController
    func renderUserAccountData(userData: LoginResponse.UserAccount) {
        print("ExtractViewController", userData)
        
        if let userName = userData.name {
            self.labelUserName.text = userName
        }
        
        if let agency = userData.agency, let account = userData.account {
            self.labelUserAccountAgency.text = "\(agency) / \(account.maskAgency())"
        }
        
        if let balance = userData.balance {
            self.labelUserBalance.text = Double(balance).transformToCurrency
        }
    }
    
    @IBAction func actionLogoutUser(_ sender: Any) {
        self.navigationController?.popViewController(animated: true)
    }
}

extension ExtractViewController {
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
}
