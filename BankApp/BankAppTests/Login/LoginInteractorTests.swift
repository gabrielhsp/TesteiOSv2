//
//  LoginInteractorTests.swift
//  BankApp
//
//  Created by Gabriel Henrique Santos Pereira on 16/04/19.
//  Copyright (c) 2019 Gabriel Henrique Santos Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import BankApp

import XCTest

class LoginInteractorTests: XCTestCase {
    // MARK: Subject under test
    var sut: LoginInteractor!
    var loginProperties: (cpf: String, email: String, password: String) = ("07745339006", "test@test.com", "T@34mldsoks")
    
    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        setupLoginInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    func setupLoginInteractor() {
        sut = LoginInteractor()
    }
    
    // MARK: Unit Test Cases for LoginInteractor Methods
    
    // The method will test if the Login TextFields are empty
    func testEmptyLoginTextFields() {
        XCTAssertFalse(sut.valuesAreEmpty(user: "", password: ""), "The TextFields of login are emoty and the method should return false")
    }
    
    // The method will test if the user is a valid CPF or a valid email
    func testTestUserLoginType() {
        XCTAssert(sut.userLoginIsValid(user: loginProperties.cpf), "The user CPF document is a valid document")
        XCTAssert(sut.userLoginIsValid(user: loginProperties.email), "The user email is a valid document")
    }
    
    // The method will test if the password have one uppercase character, one number and one special character
    func testPasswordIsValid() {
        let testResult = sut.passwordIsValid(password: loginProperties.password)
        
        XCTAssertTrue(testResult, "The password matches with all requirements")
    }
}
